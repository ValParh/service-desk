const mysql = require("mysql2/promise")
const fs = require("fs")
const path = require("path")

async function setupDatabase() {
  try {
    console.log("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const connection = await mysql.createConnection({
      host: process.env.DB_HOST || "localhost",
      port: Number.parseInt(process.env.DB_PORT || "3306"),
      user: process.env.DB_USER || "root",
      password: process.env.DB_PASSWORD || "",
      multipleStatements: true,
    })

    console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

    // –ß—Ç–µ–Ω–∏–µ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL —Å–∫—Ä–∏–ø—Ç–æ–≤
    const scriptsDir = path.join(__dirname, "../scripts")
    const sqlFiles = fs
      .readdirSync(scriptsDir)
      .filter((file) => file.endsWith(".sql"))
      .sort()

    for (const file of sqlFiles) {
      console.log(`üìÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ ${file}...`)
      const sqlContent = fs.readFileSync(path.join(scriptsDir, file), "utf8")
      await connection.query(sqlContent)
      console.log(`‚úÖ ${file} –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ`)
    }

    await connection.end()
    console.log("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:", error)
    process.exit(1)
  }
}

setupDatabase()
